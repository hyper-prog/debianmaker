#!/bin/bash

export LC_CTYPE=C

. /dm_inchroot_lib/dm_uni_fullupgrade

debconf-set-selections <<EOF
locales locales/locales_to_be_generated multiselect en_US.UTF-8 UTF-8, hu_HU.UTF-8 UTF-8
locales locales/default_environment_locale select C.UTF-8
debconf debconf/priority select critical
debconf debconf/frontend select Noninteractive
tzdata tzdata/Areas select ${TZAREA}
tzdata tzdata/Zones/${TZAREA} select ${TZNAME}
EOF

apt -y install locales
sed -e 's/^# hu_HU.UTF-8 UTF-8/hu_HU.UTF-8 UTF-8/' -e 's/^# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' -i /etc/locale.gen
echo "${TZAREA}/${TZNAME}" > /etc/timezone
ln -sf /usr/share/zoneinfo/${TZAREA}/${TZNAME} /etc/localtime
dpkg-reconfigure debconf -f noninteractive -p critical
locale-gen
update-locale LANG=C.UTF-8
apt -y install --no-install-recommends linux-image-amd64 linux-headers-amd64 linux-libc-dev:amd64

if test "${FSTYPE}" = "zfs"
then
    apt -y install zfsutils-linux zfs-zed dkms zfs-dkms zfs-initramfs spl-dkms spl
fi
if test "${FSTYPE}" = "ext4"
then
    apt -y install lvm2 mdadm
fi

apt -y install gdisk dosfstools git rsync keyboard-configuration kbd man ${PACKAGES}

if test "${BOOTTYPE}" = "bios"
then
    . /dm_inchroot_lib/dm_chr_grubsetbiosboot
fi
if test "${BOOTTYPE}" = "efi"
then
    . /dm_inchroot_lib/dm_chr_grubsetefiboot
fi

if test "${FSTYPE}" = "zfs"
then
    . /dm_inchroot_lib/dm_chr_zfsswapon
    . /dm_inchroot_lib/dm_chr_zfssetparameters
fi

if test "${FSTYPE}" = "ext4"
then
    . /dm_inchroot_lib/dm_chr_lvmswapon
fi

. /dm_inchroot_lib/dm_chr_setrootpassword
. /dm_inchroot_lib/dm_chr_installssh

if test "${NEEDDOCKER}" = "y"
then
    . /dm_inchroot_lib/dm_chr_docker
fi

